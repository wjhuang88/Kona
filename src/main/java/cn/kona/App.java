package cn.kona;

import cn.kona.transport.Cell;
import cn.kona.transport.Pipeline;
import cn.kona.transport.impl.Acceptor;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.charset.Charset;
import kotlin.Unit;
import org.jetbrains.annotations.NotNull;

/**
 * Generated by ryplat | Wed Sep 13 14:17:33 CST 2017
 */
public class App {

    public static void main(String[] args) throws Exception {
        InetSocketAddress address = new InetSocketAddress(9999);
        ServerSocketChannel channel = ServerSocketChannel.open();
        channel.socket().bind(address);
        Pipeline pipeline = new Pipeline(data -> {
            System.out.println(data);
            return Unit.INSTANCE;
        });
        pipeline.addCells(new TestCell("1"));
        Acceptor acceptor = new Acceptor(pipeline);
        acceptor.registerChannel(channel, "boss");
        acceptor.run();
    }

    static class TestCell implements Cell {

        private String num;

        public TestCell(String num) {
            this.num = num;
        }

        @NotNull
        @Override
        public Object make(@NotNull Object data) {
            CharBuffer decode = Charset.forName("UTF-8").decode((ByteBuffer) data);
            return "added " + num + " data " + decode;
        }
    }
}
